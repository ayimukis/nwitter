{"version":3,"sources":["fbase.js","components/AuthForm.js","images/IMG_1A2A5AC66A79-1.jpeg","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","code","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","src","logo","width","height","style","marginBottom","icon","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObj","ref","deleteObject","toggleEditing","updateDoc","then","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","uid","uuidv4","fileRef","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","q","query","where","orderBy","getDocs","updateProfile","currentUser","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b13b8c05.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport {getAuth} from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage, ref, uploadString } from \"firebase/storage\"\n\nconst firebaseConfig = {\n\n    apiKey: process.env.REACT_APP_API_KEY,\n\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n\n    projectId: process.env.REACT_APP_PROJECT_ID,\n\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n\n    appId: process.env.REACT_APP_APP_ID,\n\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage(firebaseApp);","import React, {useState}  from \"react\";\nimport {createUserWithEmailAndPassword, signInWithEmailAndPassword} from \"firebase/auth\";\nimport {authService} from \"../fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if ( name === \"email\" ) {\n            setEmail(value);\n        } else if ( name === \"password\" ) {\n            setPassword(value);\n        }\n        // console.log(`${email},${password}`)\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if ( newAccount ) {\n                // create account\n                data = await createUserWithEmailAndPassword(\n                    authService,\n                    email,\n                    password\n                )\n            } else {\n                // log in\n                data = await signInWithEmailAndPassword(\n                    authService,\n                    email,\n                    password\n                )\n            }\n            console.log(data);\n        } catch (error) {\n            console.log(error)\n            setError(error.code);\n        }\n\n    }\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"}/>\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in.\" : \"Create Account\"}</span>\n        </>\n    )\n}\n\nexport default AuthForm","export default __webpack_public_path__ + \"static/media/IMG_1A2A5AC66A79-1.18b483e4.jpeg\";","import React from \"react\";\nimport {authService} from \"../fbase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport logo from \"../images/IMG_1A2A5AC66A79-1.jpeg\"\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target : { name }} = event;\n        let provider;\n        if ( name === \"google\" ) {\n            provider = new GoogleAuthProvider();\n        } else if ( name === \"github\" ) {\n            provider = new GithubAuthProvider();\n        }\n        const data = await signInWithPopup(authService, provider);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <img src={logo} width=\"350px\" height=\"175px\" style={{ marginBottom: \"0px\" }}/>\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n};\nexport default Auth","import React, {useState} from \"react\";\nimport {dbService, storageService} from \"../fbase\";\nimport { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport {deleteObject, ref} from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport {isElement} from \"react-dom/test-utils\";\nimport {v4 as uuidv4} from \"uuid\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if ( ok ) {\n            await deleteDoc(doc(dbService, \"nweets\", nweetObj.id));\n            console.log(nweetObj.attachmentUrl);\n\n            const deleteObj = ref(storageService, nweetObj.attachmentUrl);\n            await deleteObject(deleteObj);\n\n\n        }\n    }\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const ok = window.confirm(\"Are you sure you want to update this nweet?\");\n        if ( ok ) {\n            await updateDoc(doc(dbService, \"nweets\", nweetObj.id), { text: newNweet }).then(toggleEditing);\n\n        }\n    }\n    const onChange = (event) => {\n        const {target: {value}} = event\n        setNewNweet(value);\n\n    }\n    return (\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <>\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                            <input\n                                type=\"text\"\n                                onChange={onChange}\n                                placeholder=\"Edit your nweet\"\n                                value={newNweet}\n                                required\n                            />\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                        </form>\n                        <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\n                    </>\n                    ) : (\n                        <>\n                            <h4>{nweetObj.text}</h4>\n                            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl } width=\"50px\" height=\"50px\"/> }\n                            {isOwner &&\n                                (\n                                <>\n                                    <div className=\"nweet__actions\">\n                                        <span onClick={onDeleteClick}>\n                                            <FontAwesomeIcon icon={faTrash}/>\n                                        </span>\n                                        <span onClick={toggleEditing}>\n                                            <FontAwesomeIcon icon={faPencilAlt}/>\n                                        </span>\n                                    </div>\n                                </>\n                                )\n                            }\n                        </>\n                    )\n\n            }\n\n        </div>\n    )\n}\nexport default Nweet","import React, {useState} from \"react\";\nimport {getDownloadURL, getStorage, ref, uploadString} from \"firebase/storage\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {dbService, storageService} from \"../fbase\";\nimport {addDoc, collection} from \"firebase/firestore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if ( attachment !== \"\" ) {\n            const storage = getStorage();\n\n            // const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            console.log(userObj.uid+\"/\"+uuidv4())\n            const fileRef = ref(storageService, userObj.uid+\"/\"+uuidv4());\n            const response = await uploadString(fileRef, attachment, \"data_url\");\n            console.log(response)\n            attachmentUrl = await getDownloadURL(fileRef);\n            console.log(attachmentUrl);\n\n        }\n\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n\n        await addDoc(collection(dbService, \"nweets\"), nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const { target: {value} } = event;\n        setNweet(value);\n    }\n    const onFileChange = (event) => {\n        const {target : {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result }\n\n            } = finishedEvent\n            setAttachment(result);\n            console.log(attachment)\n        };\n        reader.readAsDataURL(theFile);\n    }\n\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment &&\n                (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={attachment}\n                            style={{\n                                backgroundImage: attachment,\n                            }}\n                        />\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </div>\n                    </div>\n                )\n            }\n        </form>\n\n    )\n}\nexport default NweetFactory;","import React, {useEffect, useState} from \"react\";\nimport { v4 as uuidv4 } from \"uuid\"\nimport { collection, addDoc, onSnapshot } from \"firebase/firestore\";\nimport {dbService} from \"../fbase\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        onSnapshot(collection(dbService, \"nweets\"), (snapshot) => {\n            const nweetArray = snapshot.docs.map(doc => (\n                {id: doc.id, ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{ marginTop: 30 }}>\n                {nweets.map(nweet => <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>)}\n            </div>\n        </div>\n    )\n}\nexport default Home","import React from \"react\";\nimport {Link} from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n                <li>\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/profile\"\n                        style={{\n                            marginLeft: 10,\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                        <span style={{ marginTop: 10 }}>\n                            {userObj.displayName\n                                ? `${userObj.displayName}의 Profile`\n                                : \"Profile\"}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    )\n};\n\nexport default Navigation","import React, {useEffect, useState} from \"react\";\nimport {authService, dbService} from \"../fbase\";\nimport {getAuth, updateProfile} from \"firebase/auth\";\nimport {collection, getDocs, query, where, orderBy} from \"firebase/firestore\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async () => {\n        const q = query(collection(dbService, \"nweets\"), where(\"creatorId\", \"==\", userObj.uid), orderBy(\"createdAt\", \"desc\"))\n\n        const nweets = await getDocs(q);\n\n        console.log(nweets.docs.map(doc => doc.data()));\n    }\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n\n            await updateProfile(authService.currentUser, {\n                displayName: newDisplayName,\n            })\n            refreshUser();\n        }\n    }\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewDisplayName(value)\n    }\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    )\n};\nexport default Profile","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n\n                        <Route exact path=\"/\" >\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile\n                                userObj={userObj}\n                                refreshUser={refreshUser}\n                            />\n                        </Route>\n\n                    </div>\n                    ) : (\n                        <Route exact path=\"/\" >\n                            <Auth />\n                        </Route>\n                    )}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if ( user ) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args)\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true)\n        })\n    }, [])\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args)\n        });\n    }\n\n    return (\n        <>\n            {init ?\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n                : \"Initializing....\"}\n            {/*<footer>*/}\n            {/*    &copy; {new Date().getFullYear()} Twitter*/}\n            {/*</footer>*/}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}